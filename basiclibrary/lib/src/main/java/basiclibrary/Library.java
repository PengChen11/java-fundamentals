/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package basiclibrary;
import java.lang.Math;
import java.util.*;

public class Library {
    public boolean someLibraryMethod() {
        return true;
    }

    public static int[] roll (int n) {
        int[] result = new int[n];
        for (int i = 0; i < n; i++){
            result[i] = rollOnce();
        }
        return result;
    }

    public static boolean containsDuplicates(int[] arr) {
        boolean result = false;
        HashMap<Integer, Integer> store = new HashMap<>();

        for (int i = 0; i < arr.length; i++) {
            boolean isKeyPresent= store.containsKey(arr[i]);
            if (!isKeyPresent){
                store.put(arr[i], arr[i]);
            } else {
                result = true;
                break;
            }
        }
        return result;
    }

    public static double calculateAverages(int[] arr){
        return Arrays.stream(arr).average().orElse(Double.NaN);
    }

    public static int[] getLowestAvgArr(int[][] arr){
        int[] result = new int[7];
        double lowestAvgNum = 0;

        for (int[] innerArr:  arr) {
            double averageNum = calculateAverages(innerArr);
            if (lowestAvgNum == 0){
                lowestAvgNum = averageNum;
            }
            if (averageNum < lowestAvgNum){
                lowestAvgNum = averageNum;
                result = innerArr;
            }
        }

        return result;
    }

    private static int rollOnce(){
        // define the range
        int max = 6;
        int min = 1;
        int range = max - min + 1;
        int rand = (int)(Math.random() * range) + min;
        return rand;
    }

}
